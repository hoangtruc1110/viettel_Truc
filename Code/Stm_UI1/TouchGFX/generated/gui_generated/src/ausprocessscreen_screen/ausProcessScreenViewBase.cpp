/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/ausprocessscreen_screen/ausProcessScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ausProcessScreenViewBase::ausProcessScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 240, 320);
    box1.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box1);

    statusBar1.setXY(0, 0);
    add(statusBar1);

    circleProgress1.setXY(48, 50);
    circleProgress1.setProgressIndicatorPosition(0, 0, 144, 144);
    circleProgress1.setRange(0, 15);
    circleProgress1.setCenter(72, 72);
    circleProgress1.setRadius(68);
    circleProgress1.setLineWidth(4);
    circleProgress1.setStartEndAngle(360, 0);
    circleProgress1.setCapPrecision(180);
    circleProgress1.setBackground(touchgfx::Bitmap(BITMAP_CIRCLEPROCESS_ID));
    circleProgress1Painter.setColor(touchgfx::Color::getColorFromRGB(156, 156, 156));
    circleProgress1.setPainter(circleProgress1Painter);
    circleProgress1.setValue(15);
    add(circleProgress1);

    retakeImg.setXY(59, 264);
    retakeImg.setBitmap(touchgfx::Bitmap(BITMAP_FRAME_233_ID));
    retakeImg.setVisible(false);
    add(retakeImg);

    resumeImg.setXY(126, 264);
    resumeImg.setBitmap(touchgfx::Bitmap(BITMAP_FRAME_234_ID));
    resumeImg.setVisible(false);
    add(resumeImg);

    count.setPosition(99, 92, 42, 30);
    count.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    count.setLinespacing(0);
    count.setWideTextAction(WIDE_TEXT_WORDWRAP_ELLIPSIS_AFTER_SPACE);
    Unicode::snprintf(countBuffer, COUNT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VS83).getText());
    count.setWildcard(countBuffer);
    count.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4984));
    add(count);

    startImg.setPosition(86, 124, 68, 36);
    buttonBlue1.setXY(0, 0);
    startImg.add(buttonBlue1);

    textArea1_1.setXY(17, 9);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QAMF));
    startImg.add(textArea1_1);

    add(startImg);

    pauseImg.setXY(78, 130);
    pauseImg.setBitmap(touchgfx::Bitmap(BITMAP_PAUSE_ID));
    pauseImg.setVisible(false);
    add(pauseImg);

    recImg.setXY(91, 131);
    recImg.setBitmap(touchgfx::Bitmap(BITMAP_RECICON_ID));
    recImg.setVisible(false);
    add(recImg);

    warnImg.setPosition(26, 201, 188, 49);
    warnImg.setVisible(false);
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_REDBACKGROUND_ID));
    scalableImage2.setPosition(0, 0, 188, 49);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    warnImg.add(scalableImage2);

    textArea1.setPosition(16, 7, 156, 34);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setWideTextAction(WIDE_TEXT_WORDWRAP_ELLIPSIS_AFTER_SPACE);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8VCP));
    warnImg.add(textArea1);

    add(warnImg);
}

ausProcessScreenViewBase::~ausProcessScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void ausProcessScreenViewBase::setupScreen()
{
    statusBar1.initialize();
    buttonBlue1.initialize();
}

void ausProcessScreenViewBase::handleKeyEvent(uint8_t key)
{
    if(0 == key)
    {
        //Interaction1
        //When hardware button 0 clicked call virtual function
        //Call selectTrigger
        selectTrigger();
    
    }

    if(2 == key)
    {
        //Interaction2
        //When hardware button 2 clicked call virtual function
        //Call rightTrigger
        rightTrigger();
    
    }

    if(4 == key)
    {
        //Interaction3
        //When hardware button 4 clicked call virtual function
        //Call leftTrigger
        leftTrigger();
    
    }

    if(5 == key)
    {
        //Interaction4
        //When hardware button 5 clicked call virtual function
        //Call backTrigger
        backTrigger();
    
    }

    if(6 == key)
    {
        //Interaction5
        //When hardware button 6 clicked call virtual function
        //Call homeTrigger
        homeTrigger();
    
    }
}
