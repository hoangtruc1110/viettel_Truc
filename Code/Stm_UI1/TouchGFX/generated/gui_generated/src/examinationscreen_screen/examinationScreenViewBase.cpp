/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/examinationscreen_screen/examinationScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

examinationScreenViewBase::examinationScreenViewBase()
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 240, 320);
    box1.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box1);

    containerEcg.setXY(125, 197);
    add(containerEcg);

    containerTemp.setXY(21, 83);
    add(containerTemp);

    containerSP02.setXY(125, 83);
    add(containerSP02);

    containerAus.setXY(21, 197);
    add(containerAus);

    box2.setPosition(19, 39, 198, 37);
    box2.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box2);

    boxProfile.setPosition(19, 39, 141, 37);
    boxProfile.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    boxProfile.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxProfile.setBorderSize(1);
    boxProfile.setVisible(false);
    add(boxProfile);

    tempIcon.setXY(58, 97);
    tempIcon.setBitmap(touchgfx::Bitmap(BITMAP_TEMPICON_ID));
    add(tempIcon);

    tempTickIcon.setXY(58, 97);
    tempTickIcon.setBitmap(touchgfx::Bitmap(BITMAP_TEMPTICKICON_ID));
    tempTickIcon.setVisible(false);
    add(tempTickIcon);

    tempText.setPosition(29, 143, 78, 17);
    tempText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tempText.setLinespacing(0);
    tempText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8JVW));
    add(tempText);

    auscultationText.setPosition(29, 266, 78, 17);
    auscultationText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    auscultationText.setLinespacing(0);
    auscultationText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_URDR));
    add(auscultationText);

    spo2Text.setXY(137, 145);
    spo2Text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    spo2Text.setLinespacing(0);
    spo2Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CSRC));
    add(spo2Text);

    spo2Icon.setXY(152, 97);
    spo2Icon.setBitmap(touchgfx::Bitmap(BITMAP_SPO2ICON_ID));
    add(spo2Icon);

    spo2TickIcon.setXY(152, 97);
    spo2TickIcon.setBitmap(touchgfx::Bitmap(BITMAP_SPO2TICKICON_ID));
    spo2TickIcon.setVisible(false);
    add(spo2TickIcon);

    ausIcon.setXY(54, 212);
    ausIcon.setBitmap(touchgfx::Bitmap(BITMAP_AUSICON_ID));
    add(ausIcon);

    ausTickIcon.setXY(54, 212);
    ausTickIcon.setBitmap(touchgfx::Bitmap(BITMAP_AUSTICKICON_ID));
    ausTickIcon.setVisible(false);
    add(ausTickIcon);

    statusBar1.setXY(0, 0);
    add(statusBar1);

    image3.setXY(24, 42);
    image3.setBitmap(touchgfx::Bitmap(BITMAP_AVATARMINI_ID));
    add(image3);

    image4.setXY(187, 40);
    image4.setBitmap(touchgfx::Bitmap(BITMAP_SETTINGS_ID));
    add(image4);

    textArea1.setPosition(55, 44, 97, 26);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B9GR));
    add(textArea1);

    ecgText.setXY(158, 260);
    ecgText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ecgText.setLinespacing(0);
    ecgText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_75UU));
    add(ecgText);

    ecgIcon.setXY(157, 218);
    ecgIcon.setBitmap(touchgfx::Bitmap(BITMAP_ECGICON_ID));
    add(ecgIcon);

    ecgTickIcon.setXY(157, 218);
    ecgTickIcon.setBitmap(touchgfx::Bitmap(BITMAP_ECGTICKICON_ID));
    ecgTickIcon.setVisible(false);
    add(ecgTickIcon);
}

examinationScreenViewBase::~examinationScreenViewBase()
{

}

void examinationScreenViewBase::setupScreen()
{
    containerEcg.initialize();
    containerTemp.initialize();
    containerSP02.initialize();
    containerAus.initialize();
    statusBar1.initialize();
}

void examinationScreenViewBase::handleKeyEvent(uint8_t key)
{
    if(1 == key)
    {
        //Interaction1
        //When hardware button 1 clicked call virtual function
        //Call upTrigger
        upTrigger();
    
    }

    if(2 == key)
    {
        //Interaction2
        //When hardware button 2 clicked call virtual function
        //Call rightTrigger
        rightTrigger();
    
    }

    if(3 == key)
    {
        //Interaction3
        //When hardware button 3 clicked call virtual function
        //Call downTrigger
        downTrigger();
    
    }

    if(4 == key)
    {
        //Interaction4
        //When hardware button 4 clicked call virtual function
        //Call leftTrigger
        leftTrigger();
    
    }

    if(0 == key)
    {
        //Interaction5
        //When hardware button 0 clicked call virtual function
        //Call selectTrigger
        selectTrigger();
    
    }

    if(5 == key)
    {
        //Interaction6
        //When hardware button 5 clicked change screen to liveModeScreen
        //Go to liveModeScreen with no screen transition
        application().gotoliveModeScreenScreenNoTransition();
    
    }

    if(6 == key)
    {
        //Interaction7
        //When hardware button 6 clicked change screen to chooseRoleScreen
        //Go to chooseRoleScreen with no screen transition
        application().gotochooseRoleScreenScreenNoTransition();
    
    }
}
