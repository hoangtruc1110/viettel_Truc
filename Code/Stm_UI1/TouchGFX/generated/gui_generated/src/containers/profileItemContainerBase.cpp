/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/profileItemContainerBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

profileItemContainerBase::profileItemContainerBase()
{
    setWidth(104);
    setHeight(99);
    box2.setPosition(0, 0, 104, 99);
    box2.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box2);

    box1.setPosition(4, 3, 96, 92);
    box1.setColor(touchgfx::Color::getColorFromRGB(17, 27, 36));
    add(box1);

    box2_1_3.setPosition(92, 3, 8, 8);
    box2_1_3.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box2_1_3);

    box2_1_2.setPosition(4, 3, 8, 8);
    box2_1_2.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box2_1_2);

    box2_1_1.setPosition(92, 87, 8, 8);
    box2_1_1.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box2_1_1);

    box2_1.setPosition(4, 87, 8, 8);
    box2_1.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box2_1);

    focusImg.setBitmap(touchgfx::Bitmap(BITMAP_FRAME_348_ID));
    focusImg.setPosition(0, 0, 104, 99);
    focusImg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    focusImg.setVisible(false);
    add(focusImg);

    circle1_3.setPosition(4, 3, 16, 16);
    circle1_3.setCenter(8, 8);
    circle1_3.setRadius(8);
    circle1_3.setLineWidth(0);
    circle1_3.setArc(0, 360);
    circle1_3Painter.setColor(touchgfx::Color::getColorFromRGB(17, 27, 36));
    circle1_3.setPainter(circle1_3Painter);
    add(circle1_3);

    circle1.setPosition(84, 79, 16, 16);
    circle1.setCenter(8, 8);
    circle1.setRadius(8);
    circle1.setLineWidth(0);
    circle1.setArc(0, 360);
    circle1Painter.setColor(touchgfx::Color::getColorFromRGB(17, 27, 36));
    circle1.setPainter(circle1Painter);
    add(circle1);

    circle1_2.setPosition(84, 3, 16, 16);
    circle1_2.setCenter(8, 8);
    circle1_2.setRadius(8);
    circle1_2.setLineWidth(0);
    circle1_2.setArc(0, 360);
    circle1_2Painter.setColor(touchgfx::Color::getColorFromRGB(17, 27, 36));
    circle1_2.setPainter(circle1_2Painter);
    add(circle1_2);

    circle1_1.setPosition(4, 79, 16, 16);
    circle1_1.setCenter(8, 8);
    circle1_1.setRadius(8);
    circle1_1.setLineWidth(0);
    circle1_1.setArc(0, 360);
    circle1_1Painter.setColor(touchgfx::Color::getColorFromRGB(17, 27, 36));
    circle1_1.setPainter(circle1_1Painter);
    add(circle1_1);

    avatarImg.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLEAVT_ID));
    avatarImg.setPosition(10, 7, 84, 56);
    avatarImg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(avatarImg);

    profileName.setPosition(8, 69, 88, 21);
    profileName.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    profileName.setLinespacing(0);
    Unicode::snprintf(profileNameBuffer, PROFILENAME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8RKB).getText());
    profileName.setWildcard(profileNameBuffer);
    profileName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UAAR));
    add(profileName);
}

profileItemContainerBase::~profileItemContainerBase()
{

}

void profileItemContainerBase::initialize()
{

}
