/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/ausChooseNipleContainerBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

ausChooseNipleContainerBase::ausChooseNipleContainerBase()
{
    setWidth(194);
    setHeight(86);
    box1.setPosition(5, 5, 184, 76);
    box1.setColor(touchgfx::Color::getColorFromRGB(10, 21, 30));
    add(box1);

    box2.setPosition(5, 5, 8, 8);
    box2.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box2);

    box2_2.setPosition(5, 73, 8, 8);
    box2_2.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box2_2);

    box2_2_1.setPosition(181, 73, 8, 8);
    box2_2_1.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box2_2_1);

    box2_1.setPosition(181, 5, 8, 8);
    box2_1.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box2_1);

    circle1_3.setPosition(5, 5, 16, 16);
    circle1_3.setCenter(8, 8);
    circle1_3.setRadius(8);
    circle1_3.setLineWidth(0);
    circle1_3.setArc(0, 360);
    circle1_3Painter.setColor(touchgfx::Color::getColorFromRGB(10, 21, 30));
    circle1_3.setPainter(circle1_3Painter);
    add(circle1_3);

    circle1.setPosition(173, 65, 16, 16);
    circle1.setCenter(8, 8);
    circle1.setRadius(8);
    circle1.setLineWidth(0);
    circle1.setArc(0, 360);
    circle1Painter.setColor(touchgfx::Color::getColorFromRGB(10, 21, 30));
    circle1.setPainter(circle1Painter);
    add(circle1);

    circle1_1.setPosition(173, 5, 16, 16);
    circle1_1.setCenter(8, 8);
    circle1_1.setRadius(8);
    circle1_1.setLineWidth(0);
    circle1_1.setArc(0, 360);
    circle1_1Painter.setColor(touchgfx::Color::getColorFromRGB(10, 21, 30));
    circle1_1.setPainter(circle1_1Painter);
    add(circle1_1);

    circle1_2.setPosition(5, 65, 16, 16);
    circle1_2.setCenter(8, 8);
    circle1_2.setRadius(8);
    circle1_2.setLineWidth(0);
    circle1_2.setArc(0, 360);
    circle1_2Painter.setColor(touchgfx::Color::getColorFromRGB(10, 21, 30));
    circle1_2.setPainter(circle1_2Painter);
    add(circle1_2);

    tagName.setXY(28, 25);
    tagName.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tagName.setLinespacing(0);
    Unicode::snprintf(tagNameBuffer, TAGNAME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I9KN).getText());
    tagName.setWildcard(tagNameBuffer);
    tagName.resizeToCurrentText();
    tagName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8R2Z));
    add(tagName);

    stateImg.setXY(133, 33);
    stateImg.setBitmap(touchgfx::Bitmap(BITMAP_ARROW_ID));
    add(stateImg);

    markImg.setBitmap(touchgfx::Bitmap(BITMAP_BLUEREC_ID));
    markImg.setPosition(5, 5, 184, 76);
    markImg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    markImg.setVisible(false);
    add(markImg);

    focusImg.setBitmap(touchgfx::Bitmap(BITMAP_CHOOSENDOTLINE_ID));
    focusImg.setPosition(0, 0, 194, 86);
    focusImg.setScalingAlgorithm(touchgfx::ScalableImage::BILINEAR_INTERPOLATION);
    focusImg.setVisible(false);
    add(focusImg);
}

ausChooseNipleContainerBase::~ausChooseNipleContainerBase()
{

}

void ausChooseNipleContainerBase::initialize()
{

}
