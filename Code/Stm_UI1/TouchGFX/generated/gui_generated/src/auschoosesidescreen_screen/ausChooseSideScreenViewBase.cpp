/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/auschoosesidescreen_screen/ausChooseSideScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

ausChooseSideScreenViewBase::ausChooseSideScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 240, 320);
    box1.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    add(box1);

    statusBar1.setXY(0, 0);
    add(statusBar1);

    leftContainer.setXY(25, 82);
    add(leftContainer);

    rightContainer.setXY(136, 82);
    add(rightContainer);

    textLeft.setPosition(37, 118, 57, 66);
    textLeft.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textLeft.setLinespacing(0);
    textLeft.setWideTextAction(WIDE_TEXT_WORDWRAP_ELLIPSIS);
    textLeft.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FZRI));
    add(textLeft);

    textRight.setPosition(136, 118, 80, 66);
    textRight.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textRight.setLinespacing(0);
    textRight.setWideTextAction(WIDE_TEXT_WORDWRAP_ELLIPSIS);
    textRight.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JFJ3));
    add(textRight);

    tickLeft.setXY(53, 90);
    tickLeft.setBitmap(touchgfx::Bitmap(BITMAP_CHECK_CIRCLE_ID));
    tickLeft.setVisible(false);
    add(tickLeft);

    tickRight.setXY(163, 90);
    tickRight.setBitmap(touchgfx::Bitmap(BITMAP_CHECK_CIRCLE_ID));
    tickRight.setVisible(false);
    add(tickRight);

    focusLeft.setBitmap(touchgfx::Bitmap(BITMAP_VERTICALDOTLINE_ID));
    focusLeft.setPosition(20, 77, 91, 149);
    focusLeft.setScalingAlgorithm(touchgfx::ScalableImage::BILINEAR_INTERPOLATION);
    focusLeft.setVisible(false);
    add(focusLeft);

    focusRight.setBitmap(touchgfx::Bitmap(BITMAP_VERTICALDOTLINE_ID));
    focusRight.setPosition(131, 77, 91, 149);
    focusRight.setScalingAlgorithm(touchgfx::ScalableImage::BILINEAR_INTERPOLATION);
    focusRight.setVisible(false);
    add(focusRight);
}

ausChooseSideScreenViewBase::~ausChooseSideScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void ausChooseSideScreenViewBase::setupScreen()
{
    statusBar1.initialize();
    leftContainer.initialize();
    rightContainer.initialize();
}

void ausChooseSideScreenViewBase::handleKeyEvent(uint8_t key)
{
    if(2 == key)
    {
        //Interaction1
        //When hardware button 2 clicked call virtual function
        //Call rightTrigger
        rightTrigger();
    
    }

    if(4 == key)
    {
        //Interaction2
        //When hardware button 4 clicked call virtual function
        //Call leftTrigger
        leftTrigger();
    
    }

    if(0 == key)
    {
        //Interaction3
        //When hardware button 0 clicked call virtual function
        //Call selectTrigger
        selectTrigger();
    
    }

    if(5 == key)
    {
        //Interaction5
        //When hardware button 5 clicked call virtual function
        //Call backTrigger
        backTrigger();
    
    }

    if(6 == key)
    {
        //Interaction6
        //When hardware button 6 clicked call virtual function
        //Call homeTrigger
        homeTrigger();
    
    }
}
