/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/logoscreen_screen/logoScreenView.hpp>
#include <gui/logoscreen_screen/logoScreenPresenter.hpp>
#include <gui/chooserolescreen_screen/chooseRoleScreenView.hpp>
#include <gui/chooserolescreen_screen/chooseRoleScreenPresenter.hpp>
#include <gui/setupwifiscreen_screen/setUpWiFiScreenView.hpp>
#include <gui/setupwifiscreen_screen/setUpWiFiScreenPresenter.hpp>
#include <gui/connectedwifi_screen/connectedWiFiView.hpp>
#include <gui/connectedwifi_screen/connectedWiFiPresenter.hpp>
#include <gui/notconnectedwifi_screen/notConnectedWifiView.hpp>
#include <gui/notconnectedwifi_screen/notConnectedWifiPresenter.hpp>
#include <gui/homescreen_screen/homeScreenView.hpp>
#include <gui/homescreen_screen/homeScreenPresenter.hpp>
#include <gui/livemodescreen_screen/liveModeScreenView.hpp>
#include <gui/livemodescreen_screen/liveModeScreenPresenter.hpp>
#include <gui/rfidscanscreen_screen/rfidScanScreenView.hpp>
#include <gui/rfidscanscreen_screen/rfidScanScreenPresenter.hpp>
#include <gui/scansuccessscreen_screen/scanSuccessScreenView.hpp>
#include <gui/scansuccessscreen_screen/scanSuccessScreenPresenter.hpp>
#include <gui/scanerrorscreen_screen/scanErrorScreenView.hpp>
#include <gui/scanerrorscreen_screen/scanErrorScreenPresenter.hpp>
#include <gui/rfidunlinkedscreen_screen/rfidUnlinkedScreenView.hpp>
#include <gui/rfidunlinkedscreen_screen/rfidUnlinkedScreenPresenter.hpp>
#include <gui/examinationscreen_screen/examinationScreenView.hpp>
#include <gui/examinationscreen_screen/examinationScreenPresenter.hpp>
#include <gui/verifyscreen_screen/verifyScreenView.hpp>
#include <gui/verifyscreen_screen/verifyScreenPresenter.hpp>
#include <gui/tempprocessscreen_screen/tempProcessScreenView.hpp>
#include <gui/tempprocessscreen_screen/tempProcessScreenPresenter.hpp>
#include <gui/tempresultscreen_screen/tempResultScreenView.hpp>
#include <gui/tempresultscreen_screen/tempResultScreenPresenter.hpp>
#include <gui/tempprobescreen_screen/tempProbeScreenView.hpp>
#include <gui/tempprobescreen_screen/tempProbeScreenPresenter.hpp>
#include <gui/tempconnectscreen_screen/tempConnectScreenView.hpp>
#include <gui/tempconnectscreen_screen/tempConnectScreenPresenter.hpp>
#include <gui/sensorinteract_screen/sensorInteractView.hpp>
#include <gui/sensorinteract_screen/sensorInteractPresenter.hpp>
#include <gui/heartbreakstartscreen_screen/heartBreakStartScreenView.hpp>
#include <gui/heartbreakstartscreen_screen/heartBreakStartScreenPresenter.hpp>
#include <gui/realtimespo2screen_screen/realTimeSpo2ScreenView.hpp>
#include <gui/realtimespo2screen_screen/realTimeSpo2ScreenPresenter.hpp>
#include <gui/followinstructionsscreen_screen/followInstructionsScreenView.hpp>
#include <gui/followinstructionsscreen_screen/followInstructionsScreenPresenter.hpp>
#include <gui/ecgstartscreen_screen/ecgStartScreenView.hpp>
#include <gui/ecgstartscreen_screen/ecgStartScreenPresenter.hpp>
#include <gui/realtimeecgscreen_screen/realTimeEcgScreenView.hpp>
#include <gui/realtimeecgscreen_screen/realTimeEcgScreenPresenter.hpp>
#include <gui/accountscreen_screen/accountScreenView.hpp>
#include <gui/accountscreen_screen/accountScreenPresenter.hpp>
#include <gui/logoutscreen_screen/logOutScreenView.hpp>
#include <gui/logoutscreen_screen/logOutScreenPresenter.hpp>
#include <gui/loginscreen_screen/logInScreenView.hpp>
#include <gui/loginscreen_screen/logInScreenPresenter.hpp>
#include <gui/settingaccountscreen_screen/settingAccountScreenView.hpp>
#include <gui/settingaccountscreen_screen/settingAccountScreenPresenter.hpp>
#include <gui/auschoosesidescreen_screen/ausChooseSideScreenView.hpp>
#include <gui/auschoosesidescreen_screen/ausChooseSideScreenPresenter.hpp>
#include <gui/auschooseniplescreen_screen/ausChooseNipleScreenView.hpp>
#include <gui/auschooseniplescreen_screen/ausChooseNipleScreenPresenter.hpp>
#include <gui/ausprocessscreen_screen/ausProcessScreenView.hpp>
#include <gui/ausprocessscreen_screen/ausProcessScreenPresenter.hpp>
#include <gui/auschoosedocscreen_screen/ausChooseDocScreenView.hpp>
#include <gui/auschoosedocscreen_screen/ausChooseDocScreenPresenter.hpp>
#include <gui/ausprocessdocscreen_screen/ausProcessDocScreenView.hpp>
#include <gui/ausprocessdocscreen_screen/ausProcessDocScreenPresenter.hpp>
#include <gui/ausothersdocscreen_screen/ausOthersDocScreenView.hpp>
#include <gui/ausothersdocscreen_screen/ausOthersDocScreenPresenter.hpp>
#include <gui/settingscreen_screen/settingScreenView.hpp>
#include <gui/settingscreen_screen/settingScreenPresenter.hpp>
#include <gui/settingwifiscreen_screen/settingWifiScreenView.hpp>
#include <gui/settingwifiscreen_screen/settingWifiScreenPresenter.hpp>
#include <gui/settingdisplayscreen_screen/settingDisplayScreenView.hpp>
#include <gui/settingdisplayscreen_screen/settingDisplayScreenPresenter.hpp>
#include <gui/settingvolumescreen_screen/settingVolumeScreenView.hpp>
#include <gui/settingvolumescreen_screen/settingVolumeScreenPresenter.hpp>
#include <gui/settingtempscreen_screen/settingTempScreenView.hpp>
#include <gui/settingtempscreen_screen/settingTempScreenPresenter.hpp>
#include <gui/settingupdatescreen_screen/settingUpdateScreenView.hpp>
#include <gui/settingupdatescreen_screen/settingUpdateScreenPresenter.hpp>
#include <gui/settingrebootscreen_screen/settingRebootScreenView.hpp>
#include <gui/settingrebootscreen_screen/settingRebootScreenPresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< logoScreenView,
            touchgfx::meta::TypeList< chooseRoleScreenView,
            touchgfx::meta::TypeList< setUpWiFiScreenView,
            touchgfx::meta::TypeList< connectedWiFiView,
            touchgfx::meta::TypeList< notConnectedWifiView,
            touchgfx::meta::TypeList< homeScreenView,
            touchgfx::meta::TypeList< liveModeScreenView,
            touchgfx::meta::TypeList< rfidScanScreenView,
            touchgfx::meta::TypeList< scanSuccessScreenView,
            touchgfx::meta::TypeList< scanErrorScreenView,
            touchgfx::meta::TypeList< rfidUnlinkedScreenView,
            touchgfx::meta::TypeList< examinationScreenView,
            touchgfx::meta::TypeList< verifyScreenView,
            touchgfx::meta::TypeList< tempProcessScreenView,
            touchgfx::meta::TypeList< tempResultScreenView,
            touchgfx::meta::TypeList< tempProbeScreenView,
            touchgfx::meta::TypeList< tempConnectScreenView,
            touchgfx::meta::TypeList< sensorInteractView,
            touchgfx::meta::TypeList< heartBreakStartScreenView,
            touchgfx::meta::TypeList< realTimeSpo2ScreenView,
            touchgfx::meta::TypeList< followInstructionsScreenView,
            touchgfx::meta::TypeList< ecgStartScreenView,
            touchgfx::meta::TypeList< realTimeEcgScreenView,
            touchgfx::meta::TypeList< accountScreenView,
            touchgfx::meta::TypeList< logOutScreenView,
            touchgfx::meta::TypeList< logInScreenView,
            touchgfx::meta::TypeList< settingAccountScreenView,
            touchgfx::meta::TypeList< ausChooseSideScreenView,
            touchgfx::meta::TypeList< ausChooseNipleScreenView,
            touchgfx::meta::TypeList< ausProcessScreenView,
            touchgfx::meta::TypeList< ausChooseDocScreenView,
            touchgfx::meta::TypeList< ausProcessDocScreenView,
            touchgfx::meta::TypeList< ausOthersDocScreenView,
            touchgfx::meta::TypeList< settingScreenView,
            touchgfx::meta::TypeList< settingWifiScreenView,
            touchgfx::meta::TypeList< settingDisplayScreenView,
            touchgfx::meta::TypeList< settingVolumeScreenView,
            touchgfx::meta::TypeList< settingTempScreenView,
            touchgfx::meta::TypeList< settingUpdateScreenView,
            touchgfx::meta::TypeList< settingRebootScreenView,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< logoScreenPresenter,
            touchgfx::meta::TypeList< chooseRoleScreenPresenter,
            touchgfx::meta::TypeList< setUpWiFiScreenPresenter,
            touchgfx::meta::TypeList< connectedWiFiPresenter,
            touchgfx::meta::TypeList< notConnectedWifiPresenter,
            touchgfx::meta::TypeList< homeScreenPresenter,
            touchgfx::meta::TypeList< liveModeScreenPresenter,
            touchgfx::meta::TypeList< rfidScanScreenPresenter,
            touchgfx::meta::TypeList< scanSuccessScreenPresenter,
            touchgfx::meta::TypeList< scanErrorScreenPresenter,
            touchgfx::meta::TypeList< rfidUnlinkedScreenPresenter,
            touchgfx::meta::TypeList< examinationScreenPresenter,
            touchgfx::meta::TypeList< verifyScreenPresenter,
            touchgfx::meta::TypeList< tempProcessScreenPresenter,
            touchgfx::meta::TypeList< tempResultScreenPresenter,
            touchgfx::meta::TypeList< tempProbeScreenPresenter,
            touchgfx::meta::TypeList< tempConnectScreenPresenter,
            touchgfx::meta::TypeList< sensorInteractPresenter,
            touchgfx::meta::TypeList< heartBreakStartScreenPresenter,
            touchgfx::meta::TypeList< realTimeSpo2ScreenPresenter,
            touchgfx::meta::TypeList< followInstructionsScreenPresenter,
            touchgfx::meta::TypeList< ecgStartScreenPresenter,
            touchgfx::meta::TypeList< realTimeEcgScreenPresenter,
            touchgfx::meta::TypeList< accountScreenPresenter,
            touchgfx::meta::TypeList< logOutScreenPresenter,
            touchgfx::meta::TypeList< logInScreenPresenter,
            touchgfx::meta::TypeList< settingAccountScreenPresenter,
            touchgfx::meta::TypeList< ausChooseSideScreenPresenter,
            touchgfx::meta::TypeList< ausChooseNipleScreenPresenter,
            touchgfx::meta::TypeList< ausProcessScreenPresenter,
            touchgfx::meta::TypeList< ausChooseDocScreenPresenter,
            touchgfx::meta::TypeList< ausProcessDocScreenPresenter,
            touchgfx::meta::TypeList< ausOthersDocScreenPresenter,
            touchgfx::meta::TypeList< settingScreenPresenter,
            touchgfx::meta::TypeList< settingWifiScreenPresenter,
            touchgfx::meta::TypeList< settingDisplayScreenPresenter,
            touchgfx::meta::TypeList< settingVolumeScreenPresenter,
            touchgfx::meta::TypeList< settingTempScreenPresenter,
            touchgfx::meta::TypeList< settingUpdateScreenPresenter,
            touchgfx::meta::TypeList< settingRebootScreenPresenter,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::Nil
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoheartBreakStartScreenScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
