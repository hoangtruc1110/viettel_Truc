/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETTINGSCREENVIEWBASE_HPP
#define SETTINGSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/settingscreen_screen/settingScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <gui/containers/StatusBar.hpp>
#include <gui/containers/settingItemContainer.hpp>

class settingScreenViewBase : public touchgfx::View<settingScreenPresenter>
{
public:
    settingScreenViewBase();
    virtual ~settingScreenViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Virtual Action Handlers
     */
    virtual void selectTrigger()
    {
        // Override and implement this function in settingScreen
    }
    virtual void upTrigger()
    {
        // Override and implement this function in settingScreen
    }
    virtual void rightTrigger()
    {
        // Override and implement this function in settingScreen
    }
    virtual void downTrigger()
    {
        // Override and implement this function in settingScreen
    }
    virtual void leftTrigger()
    {
        // Override and implement this function in settingScreen
    }
    virtual void backTrigger()
    {
        // Override and implement this function in settingScreen
    }
    virtual void homeTrigger()
    {
        // Override and implement this function in settingScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    StatusBar statusBar1;
    settingItemContainer settingItemContainer1;
    settingItemContainer settingItemContainer1_1;
    settingItemContainer settingItemContainer1_2;
    settingItemContainer settingItemContainer1_3;
    settingItemContainer settingItemContainer1_4;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // SETTINGSCREENVIEWBASE_HPP
