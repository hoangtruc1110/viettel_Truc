/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef HEARTBREAKSTARTSCREENVIEWBASE_HPP
#define HEARTBREAKSTARTSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/heartbreakstartscreen_screen/heartBreakStartScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <gui/containers/StatusBar.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <gui/containers/buttonBlue.hpp>

class heartBreakStartScreenViewBase : public touchgfx::View<heartBreakStartScreenPresenter>
{
public:
    heartBreakStartScreenViewBase();
    virtual ~heartBreakStartScreenViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Virtual Action Handlers
     */
    virtual void selectTrigger()
    {
        // Override and implement this function in heartBreakStartScreen
    }
    virtual void backTrigger()
    {
        // Override and implement this function in heartBreakStartScreen
    }
    virtual void homeTrigger()
    {
        // Override and implement this function in heartBreakStartScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1_1;
    touchgfx::Box box3;
    touchgfx::Box box3_1;
    touchgfx::TextAreaWithOneWildcard spo2;
    StatusBar statusBar1;
    touchgfx::Box box2;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea2_3;
    touchgfx::TextArea textArea2_4;
    touchgfx::TextArea sinalQualityText;
    touchgfx::TextAreaWithOneWildcard piText;
    touchgfx::TextAreaWithOneWildcard heartRate;
    touchgfx::TextArea textArea2_1;
    touchgfx::TextArea textArea2_2;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  saveExitButton;
    touchgfx::BoxProgress bpmProcess;
    touchgfx::ScalableImage savedImg;
    touchgfx::Container container1;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::Circle signalBlink;
    touchgfx::PainterRGB565 signalBlinkPainter;
    touchgfx::Box bg;
    touchgfx::TextAreaWithOneWildcard signalState;
    touchgfx::Container startButton;
    buttonBlue buttonBlue1;
    touchgfx::TextArea textArea1_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SPO2_SIZE = 4;
    touchgfx::Unicode::UnicodeChar spo2Buffer[SPO2_SIZE];
    static const uint16_t PITEXT_SIZE = 7;
    touchgfx::Unicode::UnicodeChar piTextBuffer[PITEXT_SIZE];
    static const uint16_t HEARTRATE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar heartRateBuffer[HEARTRATE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // HEARTBREAKSTARTSCREENVIEWBASE_HPP
