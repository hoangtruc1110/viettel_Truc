/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ECGSTARTSCREENVIEWBASE_HPP
#define ECGSTARTSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/ecgstartscreen_screen/ecgStartScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <gui/containers/StatusBar.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/graph/GraphScroll.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <gui/containers/buttonBlue.hpp>

class ecgStartScreenViewBase : public touchgfx::View<ecgStartScreenPresenter>
{
public:
    ecgStartScreenViewBase();
    virtual ~ecgStartScreenViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Virtual Action Handlers
     */
    virtual void selectTrigger()
    {
        // Override and implement this function in ecgStartScreen
    }
    virtual void backTrigger()
    {
        // Override and implement this function in ecgStartScreen
    }
    virtual void homeTrigger()
    {
        // Override and implement this function in ecgStartScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1_1;
    StatusBar statusBar1;
    touchgfx::Box box2;
    touchgfx::Box box2_1;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea2_1;
    touchgfx::TextArea textArea2_1_1;
    touchgfx::TextAreaWithOneWildcard heartRate;
    touchgfx::GraphScroll<50> graph;
    touchgfx::GraphElementLine graphLine1;
    touchgfx::PainterRGB565 graphLine1Painter;
    touchgfx::Container container1;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::Box box3;
    touchgfx::Circle countBlink_1;
    touchgfx::PainterRGB565 countBlink_1Painter;
    touchgfx::Circle countBlink;
    touchgfx::PainterRGB565 countBlinkPainter;
    touchgfx::TextAreaWithOneWildcard secondCount;
    touchgfx::Container startImg;
    buttonBlue buttonBlue1;
    touchgfx::TextArea textArea1_1;
    touchgfx::ScalableImage savedImg;

    /*
     * Wildcard Buffers
     */
    static const uint16_t HEARTRATE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar heartRateBuffer[HEARTRATE_SIZE];
    static const uint16_t SECONDCOUNT_SIZE = 3;
    touchgfx::Unicode::UnicodeChar secondCountBuffer[SECONDCOUNT_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // ECGSTARTSCREENVIEWBASE_HPP
