/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#include <stdarg.h>
#include <touchgfx/TextProvider.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/TypedText.hpp>
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthRTL(TEXT_DIRECTION_LTR, text, pArg);
    va_end(pArg);
    return width;
}

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthRTL(textDirection, text, pArg);
    va_end(pArg);
    return width;
}

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    nextCharacters.replaceAt0(unicodeConverter(direction));
    if (fontGsubTable && nextCharacters.peekChar())
    {
        substituteGlyphs();
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
}

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
    unicodeConverterInit();
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
    va_list pArg;
    va_start(pArg, format);
    drawStringRTL(widgetArea, invalidatedArea, stringVisuals, format, pArg);
    va_end(pArg);
}

// Default TypedTextDatabase
extern const touchgfx::TypedText::TypedTextData* const typedTextDatabaseArray[];

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::Unicode::UnicodeChar texts_all_languages[] TEXT_LOCATION_FLASH_ATTRIBUTE = {
    0x50, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x20, 0x61, 0x20, 0x73, 0x69, 0x6c, 0x69, 0x63, 0x6f, 0x6e, 0x65, 0x20, 0x67, 0x72, 0x69, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x70, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20, 0x73, 0x69, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x6f, 0x67, 0x27, 0x73, 0x20, 0x66, 0x69, 0x72, 0x73, 0x74, 0x20, 0x6e, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x61, 0x73, 0x20, 0x61, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x67, 0x72, 0x69, 0x64, 0x2e, 0x0, // @0 "Please place a silicone grid on top of the right side of the dog's first nipple as a reference point for the grid."
    0x53, 0x63, 0x61, 0x6e, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x51, 0x52, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0xa, 0x79, 0x6f, 0x75, 0x72, 0x20, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x74, 0x6f, 0x20, 0xa, 0x61, 0x64, 0x64, 0x20, 0x61, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x0, // @115 "Scan this QR code from\nyour mobile device to \nadd a new profile"
    0x2, 0x20, 0x52, 0x61, 0x6a, 0x6b, 0x75, 0x6d, 0x61, 0x72, 0x20, 0x68, 0x61, 0x73, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x20, 0x61, 0x64, 0x64, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x0, // @179 "<> Rajkumar has been successfully added to this device"
    0x50, 0x6c, 0x61, 0x63, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0xa, 0x20, 0x63, 0x6c, 0x69, 0x70, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x61, 0x72, 0x20, 0x66, 0x6c, 0x61, 0x70, 0xa, 0x20, 0x6f, 0x72, 0x20, 0x6c, 0x69, 0x70, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x6f, 0x67, 0x2e, 0x0, // @233 "Place the sensor\n clip on the ear flap\n or lip of the dog."
    0x44, 0x6f, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x72, 0x65, 0x61, 0x6c, 0x6c, 0x79, 0xa, 0x77, 0x61, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0xa, 0x20, 0x2, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0xa, 0x74, 0x68, 0x69, 0x73, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x3f, 0x0, // @292 "Do you really\nwant to sign out\n <> from\nthis device?"
    0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x2e, 0x31, 0x2e, 0x32, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x2c, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x35, 0x20, 0x73, 0x65, 0x63, 0x73, 0x0, // @344 "Version 1.1.2 is installed, device will reboot in 5 secs"
    0x4f, 0x70, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x61, 0x70, 0x70, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x64, 0x64, 0xa, 0x6e, 0x65, 0x77, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x6b, 0x65, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x20, 0x0, // @401 "Open the mobile app to add\nnew profile or make changes "
    0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x52, 0x46, 0x49, 0x44, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0xa, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x20, 0x70, 0x65, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x20, 0xa, 0x6f, 0x6e, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x20, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x0, // @457 "Link RFID number\nwith a pet profile \non your phone"
    0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0xa, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0xa, 0x20, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x0, // @508 "Follow instructions\n given in the user\n manual"
    0x2, 0x2019, 0x73, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x66, 0x65, 0x20, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x0, // @555 "<>?s temperature is in the safe region"
    0x43, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x20, 0x61, 0x72, 0x65, 0x61, 0x20, 0x74, 0x6f, 0xa, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x20, 0x52, 0x46, 0x49, 0x44, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x0, // @593 "Cover greater area to\n identify RFID number"
    0x59, 0x6f, 0x75, 0x72, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x2, 0x20, 0x73, 0x65, 0x63, 0x73, 0x0, // @637 "Your device will reboot in <> secs"
    0x50, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x61, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x0, // @671 "Please connect a temperature probe."
    0x48, 0x65, 0x61, 0x76, 0x79, 0x20, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x0, // @707 "Heavy audio disturbance detected"
    0x57, 0x69, 0x66, 0x69, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x0, // @740 "Wifi connection not available"
    0x53, 0x63, 0x61, 0x6e, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x51, 0x52, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x20, 0x0, // @770 "Scan this QR code from your "
    0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x2, 0x20, 0x57, 0x69, 0x66, 0x69, 0x0, // @799 "Connected to <> Wifi"
    0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x2c, 0x20, 0x0, // @819 "Currently connected to, "
    0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x31, 0x2e, 0x31, 0x0, // @844 "Firmware version : 1.1.1"
    0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x0, // @869 "mobile device to connect"
    0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x61, 0x70, 0x70, 0x0, // @894 "Redirect to mobile app"
    0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x0, // @917 "Previously Connected"
    0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x4e, 0x65, 0x77, 0x20, 0x57, 0x69, 0x2d, 0x66, 0x69, 0x0, // @938 "Connect New Wi-fi"
    0x41, 0x64, 0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x0, // @956 "Add from mobile"
    0x41, 0x64, 0x64, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x0, // @972 "Add new profile"
    0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x0, // @988 "Display setting"
    0x4e, 0x6f, 0x74, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x0, // @1004 "Not identified"
    0x52, 0x46, 0x49, 0x44, 0x20, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x20, 0x0, // @1019 "RFID Unlinked "
    0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x0, // @1034 "Signal Quality"
    0x53, 0x6b, 0x69, 0x70, 0x20, 0x26, 0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x0, // @1049 "Skip & Connect"
    0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x0, // @1064 "Volume control"
    0x53, 0x63, 0x61, 0x6e, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x20, 0x70, 0x65, 0x74, 0x0, // @1079 "Scan your pet"
    0x41, 0x75, 0x73, 0x63, 0x75, 0x6c, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0, // @1093 "Auscultation"
    0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x20, 0x43, 0x61, 0x6c, 0x6c, 0x0, // @1106 "Forward Call"
    0x50, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x0, // @1119 "Pet Profiles"
    0x52, 0x69, 0x67, 0x68, 0x74, 0xa, 0x20, 0x73, 0x69, 0x64, 0x65, 0xa, 0x0, // @1132 "Right\n side\n"
    0x57, 0x68, 0x6f, 0x20, 0x61, 0x72, 0x65, 0x20, 0x79, 0x6f, 0x75, 0x3f, 0x0, // @1145 "Who are you?"
    0x48, 0x65, 0x61, 0x72, 0x74, 0x20, 0xa, 0x52, 0x61, 0x74, 0x65, 0x0, // @1158 "Heart \nRate"
    0x4c, 0x65, 0x66, 0x74, 0x20, 0x73, 0x69, 0x64, 0x65, 0xa, 0xa, 0x0, // @1170 "Left side\n\n"
    0x4e, 0x65, 0x77, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x0, // @1182 "New profile"
    0x53, 0x61, 0x76, 0x65, 0x20, 0x26, 0x20, 0x45, 0x78, 0x69, 0x74, 0x0, // @1194 "Save & Exit"
    0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x0, // @1206 "Temperature"
    0x64, 0x61, 0x73, 0x64, 0x61, 0x73, 0x64, 0x61, 0x73, 0x61, 0x73, 0x0, // @1218 "dasdasdasas"
    0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x0, // @1230 "1234567890"
    0x2, 0x73, 0x65, 0x63, 0x0, // @1241 "<>sec"
    0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x0, // @1246 "Brightness"
    0x48, 0x65, 0x61, 0x72, 0x74, 0x20, 0x52, 0x61, 0x74, 0x65, 0x0, // @1257 "Heart Rate"
    0x53, 0x65, 0x74, 0x75, 0x70, 0x20, 0x77, 0x69, 0x66, 0x69, 0x0, // @1268 "Setup wifi"
    0x53, 0x6c, 0x65, 0x65, 0x70, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x0, // @1279 "Sleep time"
    0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x65, 0x65, 0x65, 0x65, 0x0, // @1290 "Volumeeeee"
    0x4c, 0x69, 0x76, 0x65, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x0, // @1301 "Live call"
    0x50, 0x65, 0x74, 0x20, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x0, // @1311 "Pet Owner"
    0x52, 0x46, 0x49, 0x44, 0x20, 0x53, 0x63, 0x61, 0x6e, 0x0, // @1321 "RFID Scan"
    0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x0, // @1331 "Reconnect"
    0x53, 0x50, 0x4f, 0x32, 0x20, 0x26, 0x20, 0x48, 0x52, 0x0, // @1341 "SPO2 & HR"
    0x53, 0x63, 0x61, 0x6e, 0x20, 0x52, 0x46, 0x49, 0x44, 0x0, // @1351 "Scan RFID"
    0x54, 0x72, 0x79, 0x20, 0x61, 0x67, 0x61, 0x69, 0x6e, 0x0, // @1361 "Try again"
    0x2, 0x73, 0x0, // @1371 "<>s"
    0x4e, 0x65, 0x77, 0x20, 0x54, 0x65, 0x78, 0x74, 0x0, // @1374 "New Text"
    0x53, 0x63, 0x61, 0x6e, 0x20, 0x6e, 0x65, 0x77, 0x0, // @1383 "Scan new"
    0x54, 0x2, 0x0, // @1392 "T<>"
    0xb0, 0x2, 0x0, // @1395 "?<>"
    0x4e, 0x61, 0x72, 0x75, 0x75, 0x75, 0x75, 0x0, // @1398 "Naruuuu"
    0x54, 0x6f, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x0, // @1406 "Tommmmm"
    0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x0, // @1414 "Doctor"
    0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x0, // @1421 "Normal"
    0x4f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x0, // @1428 "Others"
    0x52, 0x46, 0x49, 0x44, 0x3a, 0x20, 0x0, // @1435 "RFID: "
    0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x0, // @1442 "Update"
    0x47, 0x72, 0x61, 0x70, 0x68, 0x0, // @1449 "Graph"
    0x4e, 0x65, 0x78, 0x74, 0xa, 0x0, // @1455 "Next\n"
    0x53, 0x61, 0x76, 0x65, 0x64, 0x0, // @1461 "Saved"
    0x53, 0x74, 0x61, 0x72, 0x74, 0x0, // @1467 "Start"
    0x57, 0x69, 0x2d, 0x46, 0x69, 0x0, // @1473 "Wi-Fi"
    0x39, 0x35, 0x20, 0x46, 0x0, // @1479 "95 F"
    0x45, 0x64, 0x69, 0x74, 0x0, // @1484 "Edit"
    0x47, 0x6f, 0x6f, 0x64, 0x0, // @1489 "Good"
    0x4e, 0x65, 0x78, 0x74, 0x0, // @1494 "Next"
    0x53, 0x50, 0x4f, 0x32, 0x0, // @1499 "SPO2"
    0x53, 0x74, 0x6f, 0x70, 0x0, // @1504 "Stop"
    0x54, 0x6f, 0x6d, 0x6d, 0x0, // @1509 "Tomm"
    0x54, 0x72, 0x75, 0x63, 0x0, // @1514 "Truc"
    0x55, 0x6e, 0x69, 0x74, 0x0, // @1519 "Unit"
    0x41, 0x64, 0x64, 0x0, // @1524 "Add"
    0x42, 0x70, 0x6d, 0x0, // @1528 "Bpm"
    0x45, 0x43, 0x47, 0x0, // @1532 "ECG"
    0x4c, 0x4c, 0x32, 0x0, // @1536 "LL2"
    0x54, 0x4f, 0x4d, 0x0, // @1540 "TOM"
    0x59, 0x65, 0x73, 0x0, // @1544 "Yes"
    0x5f, 0x20, 0x5f, 0x0, // @1548 "_ _"
    0x62, 0x70, 0x6d, 0x0, // @1552 "bpm"
    0x31, 0x35, 0x0, // @1556 "15"
    0x4e, 0x6f, 0x0, // @1559 "No"
    0x50, 0x49, 0x0, // @1562 "PI"
    0x25, 0x0 // @1565 "%"
};

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const uint32_t indicesGb[] TEXT_LOCATION_FLASH_ATTRIBUTE;

// Array holding dynamically installed languages
struct TranslationHeader
{
    uint32_t offset_to_texts;
    uint32_t offset_to_indices;
    uint32_t offset_to_typedtext;
};
static const TranslationHeader* languagesArray[1] = { 0 };

// Compiled and linked in languages
static const uint32_t* const staticLanguageIndices[] = {
    indicesGb
};

touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
    {
        if (languagesArray[id] != 0)
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
    }
}

void touchgfx::Texts::setTranslation(touchgfx::LanguageId id, const void* translation)
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
}
